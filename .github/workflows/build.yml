name: Build Standalone Executables

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync --group dev
    
    - name: Build executable
      run: |
        uv run python build_standalone.py --console
    
    - name: Get platform name
      id: platform
      shell: bash
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          echo "platform=windows" >> "$GITHUB_OUTPUT"
        elif [ "$RUNNER_OS" = "macOS" ]; then
          echo "platform=macos" >> "$GITHUB_OUTPUT"
        else
          echo "platform=linux" >> "$GITHUB_OUTPUT"
        fi
    
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: aswsim-${{ steps.platform.outputs.platform }}
        path: dist/aswsim*
        retention-days: 30

  create-distributions:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all executables
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create platform-specific distributions
      shell: bash
      run: |
        # Create distributions for each platform
        for platform in windows macos linux; do
          if [ -d "artifacts/aswsim-$platform" ]; then
            # Create platform-specific directory
            mkdir -p "aswsim-$platform"
            
            # Copy executable
            cp "artifacts/aswsim-$platform"/* "aswsim-$platform/"
            
            # Copy documentation
            cp README.md "aswsim-$platform/"
            cp QUICK_START.txt "aswsim-$platform/"
            cp PLATFORM_INSTRUCTIONS.txt "aswsim-$platform/"
            
            # Create platform-specific archive
            if [ "$platform" = "windows" ]; then
              zip -r "aswsim-$platform.zip" "aswsim-$platform/"
            else
              tar -czf "aswsim-$platform.tar.gz" "aswsim-$platform/"
            fi
          fi
        done
    
    - name: Upload platform distributions
      uses: actions/upload-artifact@v4
      with:
        name: platform-distributions
        path: |
          aswsim-*.zip
          aswsim-*.tar.gz
        retention-days: 90

  release:
    needs: [build, create-distributions]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download platform distributions
      uses: actions/download-artifact@v4
      with:
        name: platform-distributions
        path: distributions/
    
    - name: Download individual executables
      uses: actions/download-artifact@v4
      with:
        pattern: aswsim-*
        path: executables/
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          distributions/*.zip
          distributions/*.tar.gz
          executables/aswsim-windows/*
          executables/aswsim-macos/*
          executables/aswsim-linux/*
        body: |
          ## ASW Target Distribution Simulator v${{ github.ref_name }}
          
          Standalone executables for Windows, macOS, and Linux.
          
          ### Downloads
          - **aswsim-windows.zip**: Windows executable + documentation
          - **aswsim-macos.tar.gz**: macOS executable + documentation  
          - **aswsim-linux.tar.gz**: Linux executable + documentation
          - **Individual executables**: Platform-specific builds only
          
          ### Features
          - No Python installation required
          - Interactive visualization with Plotly
          - Multiple velocity distribution types
          - Flexible position and velocity parameters
          
          ### Quick Start
          1. Download your platform's archive file:
             - Windows: `aswsim-windows.zip`
             - macOS/Linux: `aswsim-macos.tar.gz` or `aswsim-linux.tar.gz`
          2. Extract and make executable (if needed): `chmod +x aswsim`
          3. Run: `./aswsim --help`
          
          See README.md for detailed documentation.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
